---

- hosts: localhost

  tasks:

  - name: download project build
    get_url:
      url=https://s3-{{ lookup('env','AWS_REGION') }}.amazonaws.com/{{ lookup('env','S3_URL') }}
      dest=/tmp/build.tar.gz

  - name: extract project build
    unarchive:
      src=/tmp/build.tar.gz
      dest=/
      copy=no
      owner=apache
      group=apache

  - name: remove project build archive
    file:
      path=/tmp/build.tar.gz
      state=absent

  - name: start apache
    shell: /usr/sbin/httpd

  - name: symlink file directory
    file:
      src=/assets
      dest=/public/sites/default/files
      owner=web
      group=apache
      state=link

  - name: set permissions on /assets
    file:
      path=/assets
      owner=web
      group=apache
      recurse=true
      mode=2770
      state=directory

  - name: set permissions on /private
    file:
      path=/private
      owner=web
      group=apache
      recurse=true
      mode=2770
      state=directory

  - name: include inventory file
    include_vars: /.container.yml

  - name: configure postfix
    template:
      src=/tmp/{{ item }}
      dest=/etc/postfix/{{ item }}
    with_items:
      - main.cf
      - sasl_passwd
  
  - name: create postfix hashmap database
    shell: postmap hash:/etc/postfix/sasl_passwd

  - name: remove sasl_passwd file
    file:
      path=/etc/postfix/sasl_passwd
      state=absent
  
  - name: set permission on postix db file
    file:
      path=/etc/postfix/sasl_passwd.db
      owner=root
      group=root
      mode=0600
  
  - name: configure postfix cert directories
    shell: postconf -e 'smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt'
  
  - name: start postfix
    shell: postfix start
  
  - name: setup ssh system keys
    shell: ssh-keygen -A
  
  - name: start ssh server
    shell: /usr/sbin/sshd

  - name: set web user password
    user:
      name=web
      password="{{ lookup('password', '/password.txt encrypt=md5_crypt') }}"

  - name: setup sshpiper key
    authorized_key:
      user=web
      key="{{ lookup('file', '/sshpiper-id_rsa.pub') }}"
  
  - name: setup global drupal host variable
    lineinfile:
      dest=/etc/profile
      line="export MYSQL_HOST={{ lookup('env','MYSQL_HOST') }}"

  - name: setup global drupal database variable
    lineinfile:
      dest=/etc/profile
      line="export MYSQL_DATABASE={{ lookup('env','MYSQL_DATABASE') }}"
  
  - name: setup global drupal password variable
    lineinfile:
      dest=/etc/profile
      line="export MYSQL_PASSWORD={{ lookup('env','MYSQL_PASSWORD') }}"

  - name: setup global drupal user variable
    lineinfile:
      dest=/etc/profile
      line="export MYSQL_USER={{ lookup('env','MYSQL_USER') }}"

  - name: setup cron jobs
    cron:
      name={{ item.key }}
      minute={{ item.value.minute }}
      hour={{ item.value.hour }}
      day={{ item.value.day }}
      month={{ item.value.month }}
      weekday={{ item.value.weekday }}
      job="{{ item.value.command }} > /dev/null 2>&1"
    with_dict: "{{ cron_jobs }}"
    when: cron_jobs is defined

  - name: execute deployment commands
    shell: "{{ item.value.command }} >> /var/log/commands.log"
    args:
      executable: /bin/bash
      chdir: "{{ item.value.directory }}"
    with_dict: "{{ deployment_commands }}"
    when: deployment_commands is defined
